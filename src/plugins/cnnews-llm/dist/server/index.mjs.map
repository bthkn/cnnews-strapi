{"version":3,"file":"index.mjs","sources":["../../server/src/bootstrap.ts","../../server/src/destroy.ts","../../server/src/register.ts","../../server/src/config/index.ts","../../server/src/content-types/index.ts","../../server/src/controllers/controller.ts","../../server/src/controllers/index.ts","../../server/src/middlewares/index.ts","../../server/src/policies/index.ts","../../server/src/routes/index.ts","../../server/src/services/service.ts","../../server/src/services/index.ts","../../server/src/index.ts"],"sourcesContent":["import type { Core } from '@strapi/strapi';\n\nconst bootstrap = ({ strapi }: { strapi: Core.Strapi }) => {\n  // bootstrap phase\n};\n\nexport default bootstrap;\r\n","import type { Core } from '@strapi/strapi';\n\nconst destroy = ({ strapi }: { strapi: Core.Strapi }) => {\n  // destroy phase\n};\n\nexport default destroy;\r\n","import type { Core } from '@strapi/strapi';\n\nconst register = ({ strapi }: { strapi: Core.Strapi }) => {\n  // register phase\n};\n\nexport default register;\r\n","export default {\n  default: {},\n  validator() {},\n};\r\n","export default {};\r\n","import type { Core } from '@strapi/strapi';\n\nconst controller = ({ strapi }: { strapi: Core.Strapi }) => ({\n  index(ctx) {\n    ctx.body = strapi\n      .plugin('cnnews-llm')\n      // the name of the service file & the method.\n      .service('service')\n      .getWelcomeMessage();\n  },\n});\n\nexport default controller;\r\n","import controller from './controller';\n\nexport default {\n  controller,\n};\r\n","export default {};\r\n","export default {};\r\n","export default [\n  {\n    method: 'GET',\n    path: '/',\n    // name of the controller file & the method.\n    handler: 'controller.index',\n    config: {\n      policies: [],\n    },\n  },\n];\r\n","import type { Core } from '@strapi/strapi';\n\nconst service = ({ strapi }: { strapi: Core.Strapi }) => ({\n  getWelcomeMessage() {\n    return 'Welcome to Strapi ðŸš€';\n  },\n});\n\nexport default service;\r\n","import service from './service';\n\nexport default {\n  service,\n};\r\n","/**\n * Application methods\n */\nimport bootstrap from './bootstrap';\nimport destroy from './destroy';\nimport register from './register';\n\n/**\n * Plugin server methods\n */\nimport config from './config';\nimport contentTypes from './content-types';\nimport controllers from './controllers';\nimport middlewares from './middlewares';\nimport policies from './policies';\nimport routes from './routes';\nimport services from './services';\n\nexport default {\n  register,\n  bootstrap,\n  destroy,\n  config,\n  controllers,\n  routes,\n  services,\n  contentTypes,\n  policies,\n  middlewares,\n};\r\n"],"names":["bootstrap","strapi","destroy","register","config","contentTypes","controller","ctx","controllers","middlewares","policies","routes","service","services","index"],"mappings":"AAEA,MAAMA,IAAY,CAAC,EAAE,QAAAC,QAAsC;AAE3D,GCFMC,IAAU,CAAC,EAAE,QAAAD,QAAsC;AAEzD,GCFME,IAAW,CAAC,EAAE,QAAAF,QAAsC;AAE1D,GCJeG,IAAA;AAAA,EACb,SAAS,CAAC;AAAA,EACV,YAAY;AAAA,EAAA;AACd,GCHAC,IAAe,CAAC,GCEVC,IAAa,CAAC,EAAE,QAAAL,SAAuC;AAAA,EAC3D,MAAMM,GAAK;AACL,IAAAA,EAAA,OAAON,EACR,OAAO,YAAY,EAEnB,QAAQ,SAAS,EACjB,kBAAkB;AAAA,EAAA;AAEzB,ICReO,IAAA;AAAA,EACb,YAAAF;AACF,GCJAG,IAAe,CAAC,GCAhBC,IAAe,CAAC,GCADC,IAAA;AAAA,EACb;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA;AAAA,IAEN,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,UAAU,CAAA;AAAA,IAAC;AAAA,EACb;AAEJ,GCRMC,IAAU,CAAC,EAAE,QAAAX,SAAuC;AAAA,EACxD,oBAAoB;AACX,WAAA;AAAA,EAAA;AAEX,ICJeY,IAAA;AAAA,EACb,SAAAD;AACF,GCceE,IAAA;AAAA,EACb,UAAAX;AAAA,EACA,WAAAH;AAAA,EACA,SAAAE;AAAA,EACA,QAAAE;AAAA,EACA,aAAAI;AAAA,EACA,QAAAG;AAAA,EACA,UAAAE;AAAA,EACA,cAAAR;AAAA,EACA,UAAAK;AAAA,EACA,aAAAD;AACF;"}